#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#define MAX_INPUT_LENGTH 100

char* my_getline() {
    static char buffer[MAX_INPUT_LENGTH];
    static int buffer_pos = 0;
    static int buffer_size = 0;
    
    char* line = NULL;
    int line_length = 0;
    int c;
    
    while (1) {
        if (buffer_pos >= buffer_size) {
              buffer_size = read(STDIN_FILENO, buffer, sizeof(buffer));
            buffer_pos = 0;
            
            if (buffer_size <= 0) {
                   return NULL;
            }
        }
        
        c = buffer[buffer_pos++];
        
        if (c == '\n' || c == EOF) {
            break;
        }
        line = realloc(line, (line_length + 1) * sizeof(char));
        line[line_length++] = c;
    }
    line = realloc(line, (line_length + 1) * sizeof(char));
    line[line_length] = '\0';
    
    return line;
}

void prompt() {
    char* command;
    
    while (1) {
        printf("$ ");
        
        command = my_getline();
        
        if (command == NULL) {
            // End of file condition (Ctrl+D)
            break;
        }
        
        if (strcmp(command, "exit") == 0) {
            // Exit the shell
            break;
        }
        
        printf("Command: %s\n", command);
        
        free(command);
    }
}

int main() {
    prompt();
    
    return 0;
}

